// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _calcPerceptron_HH_
#define _calcPerceptron_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1.h"
#include "calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1.h"
#include "calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1.h"
#include "calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1.h"
#include "calcPerceptron_mac_muladd_5ns_11ns_10ns_14_4_1.h"
#include "calcPerceptron_CRTL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CRTL_BUS_ADDR_WIDTH = 4,
         unsigned int C_S_AXI_CRTL_BUS_DATA_WIDTH = 32>
struct calcPerceptron : public sc_module {
    // Port declarations 48
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<32> > x_Addr_A;
    sc_out< sc_logic > x_EN_A;
    sc_out< sc_lv<4> > x_WEN_A;
    sc_out< sc_lv<32> > x_Din_A;
    sc_in< sc_lv<32> > x_Dout_A;
    sc_out< sc_logic > x_Clk_A;
    sc_out< sc_logic > x_Rst_A;
    sc_out< sc_lv<32> > w_Addr_A;
    sc_out< sc_logic > w_EN_A;
    sc_out< sc_lv<4> > w_WEN_A;
    sc_out< sc_lv<32> > w_Din_A;
    sc_in< sc_lv<32> > w_Dout_A;
    sc_out< sc_logic > w_Clk_A;
    sc_out< sc_logic > w_Rst_A;
    sc_out< sc_lv<32> > b_Addr_A;
    sc_out< sc_logic > b_EN_A;
    sc_out< sc_lv<4> > b_WEN_A;
    sc_out< sc_lv<32> > b_Din_A;
    sc_in< sc_lv<32> > b_Dout_A;
    sc_out< sc_logic > b_Clk_A;
    sc_out< sc_logic > b_Rst_A;
    sc_out< sc_lv<32> > res_Addr_A;
    sc_out< sc_logic > res_EN_A;
    sc_out< sc_lv<4> > res_WEN_A;
    sc_out< sc_lv<32> > res_Din_A;
    sc_in< sc_lv<32> > res_Dout_A;
    sc_out< sc_logic > res_Clk_A;
    sc_out< sc_logic > res_Rst_A;
    sc_in< sc_logic > s_axi_CRTL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CRTL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH/8> > s_axi_CRTL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CRTL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CRTL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CRTL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    calcPerceptron(sc_module_name name);
    SC_HAS_PROCESS(calcPerceptron);

    ~calcPerceptron();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    calcPerceptron_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>* calcPerceptron_CRTL_BUS_s_axi_U;
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>* calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1;
    calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>* calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U2;
    calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1<1,10,32,32,32>* calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U3;
    calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1<1,9,32,32,32>* calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U4;
    calcPerceptron_mac_muladd_5ns_11ns_10ns_14_4_1<1,4,5,11,10,14>* calcPerceptron_mac_muladd_5ns_11ns_10ns_14_4_1_U5;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<14> > indvar_flatten_reg_120;
    sc_signal< sc_lv<5> > j_0_reg_131;
    sc_signal< sc_lv<32> > sum_1_reg_142;
    sc_signal< sc_lv<10> > idx_0_reg_154;
    sc_signal< sc_lv<1> > icmp_ln19_fu_184_p2;
    sc_signal< sc_lv<1> > icmp_ln19_reg_285;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state32_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state37_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state42_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state47_pp0_stage0_iter9;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln19_reg_285_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln19_reg_285_pp0_iter2_reg;
    sc_signal< sc_lv<14> > add_ln19_fu_190_p2;
    sc_signal< sc_lv<14> > add_ln19_reg_289;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln21_fu_196_p2;
    sc_signal< sc_lv<1> > icmp_ln21_reg_294;
    sc_signal< sc_lv<1> > icmp_ln21_reg_294_pp0_iter1_reg;
    sc_signal< sc_lv<10> > select_ln22_1_fu_202_p3;
    sc_signal< sc_lv<10> > select_ln22_1_reg_299;
    sc_signal< sc_lv<5> > select_ln22_2_fu_216_p3;
    sc_signal< sc_lv<5> > select_ln22_2_reg_305;
    sc_signal< sc_lv<5> > select_ln22_2_reg_305_pp0_iter1_reg;
    sc_signal< sc_lv<32> > x_load_reg_321;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state13_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state18_pp0_stage1_iter3;
    sc_signal< bool > ap_block_state23_pp0_stage1_iter4;
    sc_signal< bool > ap_block_state28_pp0_stage1_iter5;
    sc_signal< bool > ap_block_state33_pp0_stage1_iter6;
    sc_signal< bool > ap_block_state38_pp0_stage1_iter7;
    sc_signal< bool > ap_block_state43_pp0_stage1_iter8;
    sc_signal< bool > ap_block_state48_pp0_stage1_iter9;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state14_pp0_stage2_iter2;
    sc_signal< bool > ap_block_state19_pp0_stage2_iter3;
    sc_signal< bool > ap_block_state24_pp0_stage2_iter4;
    sc_signal< bool > ap_block_state29_pp0_stage2_iter5;
    sc_signal< bool > ap_block_state34_pp0_stage2_iter6;
    sc_signal< bool > ap_block_state39_pp0_stage2_iter7;
    sc_signal< bool > ap_block_state44_pp0_stage2_iter8;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter1;
    sc_signal< bool > ap_block_state15_pp0_stage3_iter2;
    sc_signal< bool > ap_block_state20_pp0_stage3_iter3;
    sc_signal< bool > ap_block_state25_pp0_stage3_iter4;
    sc_signal< bool > ap_block_state30_pp0_stage3_iter5;
    sc_signal< bool > ap_block_state35_pp0_stage3_iter6;
    sc_signal< bool > ap_block_state40_pp0_stage3_iter7;
    sc_signal< bool > ap_block_state45_pp0_stage3_iter8;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > w_load_reg_336;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state6_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage4_iter1;
    sc_signal< bool > ap_block_state16_pp0_stage4_iter2;
    sc_signal< bool > ap_block_state21_pp0_stage4_iter3;
    sc_signal< bool > ap_block_state26_pp0_stage4_iter4;
    sc_signal< bool > ap_block_state31_pp0_stage4_iter5;
    sc_signal< bool > ap_block_state36_pp0_stage4_iter6;
    sc_signal< bool > ap_block_state41_pp0_stage4_iter7;
    sc_signal< bool > ap_block_state46_pp0_stage4_iter8;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<10> > idx_fu_240_p2;
    sc_signal< sc_lv<10> > idx_reg_341;
    sc_signal< sc_lv<10> > idx_reg_341_pp0_iter1_reg;
    sc_signal< sc_lv<32> > grp_fu_170_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_347;
    sc_signal< sc_lv<32> > select_ln22_fu_245_p3;
    sc_signal< sc_lv<1> > ifzero_fu_253_p2;
    sc_signal< sc_lv<1> > ifzero_reg_357;
    sc_signal< sc_lv<1> > ifzero_reg_357_pp0_iter3_reg;
    sc_signal< sc_lv<1> > ifzero_reg_357_pp0_iter4_reg;
    sc_signal< sc_lv<1> > ifzero_reg_357_pp0_iter5_reg;
    sc_signal< sc_lv<1> > ifzero_reg_357_pp0_iter6_reg;
    sc_signal< sc_lv<1> > ifzero_reg_357_pp0_iter7_reg;
    sc_signal< sc_lv<1> > ifzero_reg_357_pp0_iter8_reg;
    sc_signal< sc_lv<1> > ifzero_reg_357_pp0_iter9_reg;
    sc_signal< sc_lv<64> > zext_ln24_fu_258_p1;
    sc_signal< sc_lv<64> > zext_ln24_reg_361;
    sc_signal< sc_lv<64> > zext_ln24_reg_361_pp0_iter3_reg;
    sc_signal< sc_lv<64> > zext_ln24_reg_361_pp0_iter4_reg;
    sc_signal< sc_lv<64> > zext_ln24_reg_361_pp0_iter5_reg;
    sc_signal< sc_lv<64> > zext_ln24_reg_361_pp0_iter6_reg;
    sc_signal< sc_lv<64> > zext_ln24_reg_361_pp0_iter7_reg;
    sc_signal< sc_lv<64> > zext_ln24_reg_361_pp0_iter8_reg;
    sc_signal< sc_lv<64> > zext_ln24_reg_361_pp0_iter9_reg;
    sc_signal< sc_lv<32> > b_load_reg_371;
    sc_signal< sc_lv<32> > grp_fu_165_p2;
    sc_signal< sc_lv<32> > sum_reg_376;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<32> > tmp_reg_382;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<32> > grp_fu_179_p2;
    sc_signal< sc_lv<32> > tmp_i_i_reg_392;
    sc_signal< sc_lv<32> > tmp_3_reg_397;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_lv<32> > grp_fu_174_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_402;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_lv<14> > ap_phi_mux_indvar_flatten_phi_fu_124_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<5> > ap_phi_mux_j_0_phi_fu_135_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_sum_1_phi_fu_146_p4;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<10> > ap_phi_mux_idx_0_phi_fu_158_p4;
    sc_signal< sc_lv<64> > zext_ln22_fu_228_p1;
    sc_signal< sc_lv<64> > zext_ln22_1_fu_236_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<32> > x_Addr_A_orig;
    sc_signal< sc_lv<32> > w_Addr_A_orig;
    sc_signal< sc_lv<32> > b_Addr_A_orig;
    sc_signal< sc_lv<32> > res_Addr_A_orig;
    sc_signal< sc_lv<32> > grp_fu_165_p0;
    sc_signal< sc_lv<32> > grp_fu_165_p1;
    sc_signal< sc_lv<32> > grp_fu_179_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<5> > add_ln19_1_fu_210_p2;
    sc_signal< sc_lv<14> > grp_fu_276_p3;
    sc_signal< sc_lv<32> > bitcast_ln24_fu_262_p1;
    sc_signal< sc_lv<32> > xor_ln24_fu_265_p2;
    sc_signal< sc_lv<5> > grp_fu_276_p0;
    sc_signal< sc_lv<11> > grp_fu_276_p1;
    sc_signal< sc_lv<10> > grp_fu_276_p2;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<14> > grp_fu_276_p00;
    sc_signal< sc_lv<14> > grp_fu_276_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage3;
    static const sc_lv<7> ap_ST_fsm_pp0_stage4;
    static const sc_lv<7> ap_ST_fsm_state49;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<14> ap_const_lv14_3100;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const sc_lv<14> ap_const_lv14_310;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln19_1_fu_210_p2();
    void thread_add_ln19_fu_190_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state49();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_state10_pp0_stage3_iter1();
    void thread_ap_block_state11_pp0_stage4_iter1();
    void thread_ap_block_state12_pp0_stage0_iter2();
    void thread_ap_block_state13_pp0_stage1_iter2();
    void thread_ap_block_state14_pp0_stage2_iter2();
    void thread_ap_block_state15_pp0_stage3_iter2();
    void thread_ap_block_state16_pp0_stage4_iter2();
    void thread_ap_block_state17_pp0_stage0_iter3();
    void thread_ap_block_state18_pp0_stage1_iter3();
    void thread_ap_block_state19_pp0_stage2_iter3();
    void thread_ap_block_state20_pp0_stage3_iter3();
    void thread_ap_block_state21_pp0_stage4_iter3();
    void thread_ap_block_state22_pp0_stage0_iter4();
    void thread_ap_block_state23_pp0_stage1_iter4();
    void thread_ap_block_state24_pp0_stage2_iter4();
    void thread_ap_block_state25_pp0_stage3_iter4();
    void thread_ap_block_state26_pp0_stage4_iter4();
    void thread_ap_block_state27_pp0_stage0_iter5();
    void thread_ap_block_state28_pp0_stage1_iter5();
    void thread_ap_block_state29_pp0_stage2_iter5();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state30_pp0_stage3_iter5();
    void thread_ap_block_state31_pp0_stage4_iter5();
    void thread_ap_block_state32_pp0_stage0_iter6();
    void thread_ap_block_state33_pp0_stage1_iter6();
    void thread_ap_block_state34_pp0_stage2_iter6();
    void thread_ap_block_state35_pp0_stage3_iter6();
    void thread_ap_block_state36_pp0_stage4_iter6();
    void thread_ap_block_state37_pp0_stage0_iter7();
    void thread_ap_block_state38_pp0_stage1_iter7();
    void thread_ap_block_state39_pp0_stage2_iter7();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state40_pp0_stage3_iter7();
    void thread_ap_block_state41_pp0_stage4_iter7();
    void thread_ap_block_state42_pp0_stage0_iter8();
    void thread_ap_block_state43_pp0_stage1_iter8();
    void thread_ap_block_state44_pp0_stage2_iter8();
    void thread_ap_block_state45_pp0_stage3_iter8();
    void thread_ap_block_state46_pp0_stage4_iter8();
    void thread_ap_block_state47_pp0_stage0_iter9();
    void thread_ap_block_state48_pp0_stage1_iter9();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage4_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_block_state9_pp0_stage2_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_idx_0_phi_fu_158_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_124_p4();
    void thread_ap_phi_mux_j_0_phi_fu_135_p4();
    void thread_ap_phi_mux_sum_1_phi_fu_146_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_b_Addr_A();
    void thread_b_Addr_A_orig();
    void thread_b_Clk_A();
    void thread_b_Din_A();
    void thread_b_EN_A();
    void thread_b_Rst_A();
    void thread_b_WEN_A();
    void thread_bitcast_ln24_fu_262_p1();
    void thread_grp_fu_165_p0();
    void thread_grp_fu_165_p1();
    void thread_grp_fu_179_p1();
    void thread_grp_fu_276_p0();
    void thread_grp_fu_276_p00();
    void thread_grp_fu_276_p1();
    void thread_grp_fu_276_p2();
    void thread_grp_fu_276_p20();
    void thread_icmp_ln19_fu_184_p2();
    void thread_icmp_ln21_fu_196_p2();
    void thread_idx_fu_240_p2();
    void thread_ifzero_fu_253_p2();
    void thread_res_Addr_A();
    void thread_res_Addr_A_orig();
    void thread_res_Clk_A();
    void thread_res_Din_A();
    void thread_res_EN_A();
    void thread_res_Rst_A();
    void thread_res_WEN_A();
    void thread_select_ln22_1_fu_202_p3();
    void thread_select_ln22_2_fu_216_p3();
    void thread_select_ln22_fu_245_p3();
    void thread_w_Addr_A();
    void thread_w_Addr_A_orig();
    void thread_w_Clk_A();
    void thread_w_Din_A();
    void thread_w_EN_A();
    void thread_w_Rst_A();
    void thread_w_WEN_A();
    void thread_x_Addr_A();
    void thread_x_Addr_A_orig();
    void thread_x_Clk_A();
    void thread_x_Din_A();
    void thread_x_EN_A();
    void thread_x_Rst_A();
    void thread_x_WEN_A();
    void thread_xor_ln24_fu_265_p2();
    void thread_zext_ln22_1_fu_236_p1();
    void thread_zext_ln22_fu_228_p1();
    void thread_zext_ln24_fu_258_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
