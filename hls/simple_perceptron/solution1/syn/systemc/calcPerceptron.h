// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _calcPerceptron_HH_
#define _calcPerceptron_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1.h"
#include "calcPerceptron_fptrunc_64ns_32_2_1.h"
#include "calcPerceptron_fpext_32ns_64_2_1.h"
#include "calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1.h"
#include "calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1.h"
#include "calcPerceptron_dadd_64ns_64ns_64_5_full_dsp_1.h"
#include "calcPerceptron_dmul_64ns_64ns_64_6_max_dsp_1.h"
#include "calcPerceptron_CRTL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CRTL_BUS_DATA_WIDTH = 32>
struct calcPerceptron : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<32> > x_Addr_A;
    sc_out< sc_logic > x_EN_A;
    sc_out< sc_lv<4> > x_WEN_A;
    sc_out< sc_lv<32> > x_Din_A;
    sc_in< sc_lv<32> > x_Dout_A;
    sc_out< sc_logic > x_Clk_A;
    sc_out< sc_logic > x_Rst_A;
    sc_out< sc_lv<32> > res_Addr_A;
    sc_out< sc_logic > res_EN_A;
    sc_out< sc_lv<4> > res_WEN_A;
    sc_out< sc_lv<32> > res_Din_A;
    sc_in< sc_lv<32> > res_Dout_A;
    sc_out< sc_logic > res_Clk_A;
    sc_out< sc_logic > res_Rst_A;
    sc_in< sc_logic > s_axi_CRTL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CRTL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH/8> > s_axi_CRTL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CRTL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CRTL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CRTL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const3;


    // Module declarations
    calcPerceptron(sc_module_name name);
    SC_HAS_PROCESS(calcPerceptron);

    ~calcPerceptron();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    calcPerceptron_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>* calcPerceptron_CRTL_BUS_s_axi_U;
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>* calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1;
    calcPerceptron_fptrunc_64ns_32_2_1<1,2,64,32>* calcPerceptron_fptrunc_64ns_32_2_1_U2;
    calcPerceptron_fpext_32ns_64_2_1<1,2,32,64>* calcPerceptron_fpext_32ns_64_2_1_U3;
    calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1<1,10,32,32,32>* calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4;
    calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1<1,9,32,32,32>* calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5;
    calcPerceptron_dadd_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>* calcPerceptron_dadd_64ns_64ns_64_5_full_dsp_1_U6;
    calcPerceptron_dmul_64ns_64ns_64_6_max_dsp_1<1,6,64,64,64>* calcPerceptron_dmul_64ns_64ns_64_6_max_dsp_1_U7;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > bias;
    sc_signal< sc_lv<7> > idx_0_reg_88;
    sc_signal< sc_lv<64> > grp_fu_107_p1;
    sc_signal< sc_lv<64> > tmp_reg_167;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln11_fu_131_p2;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter26;
    sc_signal< bool > ap_block_state30_pp0_stage0_iter27;
    sc_signal< bool > ap_block_state31_pp0_stage0_iter28;
    sc_signal< bool > ap_block_state32_pp0_stage0_iter29;
    sc_signal< bool > ap_block_state33_pp0_stage0_iter30;
    sc_signal< bool > ap_block_state34_pp0_stage0_iter31;
    sc_signal< bool > ap_block_state35_pp0_stage0_iter32;
    sc_signal< bool > ap_block_state36_pp0_stage0_iter33;
    sc_signal< bool > ap_block_state37_pp0_stage0_iter34;
    sc_signal< bool > ap_block_state38_pp0_stage0_iter35;
    sc_signal< bool > ap_block_state39_pp0_stage0_iter36;
    sc_signal< bool > ap_block_state40_pp0_stage0_iter37;
    sc_signal< bool > ap_block_state41_pp0_stage0_iter38;
    sc_signal< bool > ap_block_state42_pp0_stage0_iter39;
    sc_signal< bool > ap_block_state43_pp0_stage0_iter40;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter11_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter13_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter14_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter15_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter16_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter17_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter18_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter19_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter20_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter21_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter22_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter23_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter24_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter25_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter26_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter27_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter28_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter29_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter30_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter31_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter32_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter33_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter34_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter35_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter36_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter37_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter38_reg;
    sc_signal< sc_lv<1> > icmp_ln11_reg_172_pp0_iter39_reg;
    sc_signal< sc_lv<7> > idx_fu_137_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > zext_ln13_fu_143_p1;
    sc_signal< sc_lv<64> > zext_ln13_reg_181;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter1_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter2_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter3_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter4_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter5_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter6_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter7_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter8_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter9_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter10_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter11_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter12_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter13_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter14_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter15_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter16_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter17_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter18_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter19_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter20_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter21_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter22_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter23_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter24_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter25_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter26_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter27_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter28_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter29_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter30_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter31_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter32_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter33_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter34_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter35_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter36_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter37_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter38_reg;
    sc_signal< sc_lv<64> > zext_ln13_reg_181_pp0_iter39_reg;
    sc_signal< sc_lv<64> > tmp_1_reg_196;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<64> > grp_fu_126_p2;
    sc_signal< sc_lv<64> > tmp_2_reg_201;
    sc_signal< sc_lv<64> > grp_fu_122_p2;
    sc_signal< sc_lv<64> > tmp_3_reg_206;
    sc_signal< sc_lv<32> > grp_fu_104_p1;
    sc_signal< sc_lv<32> > x_assign_reg_216;
    sc_signal< sc_lv<32> > grp_fu_117_p2;
    sc_signal< sc_lv<32> > tmp_i_i_reg_221;
    sc_signal< sc_lv<32> > grp_fu_99_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_226;
    sc_signal< sc_lv<32> > grp_fu_112_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_231;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter27;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter28;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter29;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter30;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter31;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter32;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter33;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter34;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter35;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter36;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter37;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter38;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter39;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter40;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > x_Addr_A_orig;
    sc_signal< sc_lv<32> > res_Addr_A_orig;
    sc_signal< sc_lv<64> > grp_fu_104_p0;
    sc_signal< sc_lv<32> > grp_fu_107_p0;
    sc_signal< sc_lv<64> > bitcast_ln13_fu_148_p1;
    sc_signal< sc_lv<64> > xor_ln13_fu_151_p2;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state44;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<64> ap_const_lv64_3FE0000000000000;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<64> ap_const_lv64_8000000000000000;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const3();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state44();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter7();
    void thread_ap_block_state11_pp0_stage0_iter8();
    void thread_ap_block_state12_pp0_stage0_iter9();
    void thread_ap_block_state13_pp0_stage0_iter10();
    void thread_ap_block_state14_pp0_stage0_iter11();
    void thread_ap_block_state15_pp0_stage0_iter12();
    void thread_ap_block_state16_pp0_stage0_iter13();
    void thread_ap_block_state17_pp0_stage0_iter14();
    void thread_ap_block_state18_pp0_stage0_iter15();
    void thread_ap_block_state19_pp0_stage0_iter16();
    void thread_ap_block_state20_pp0_stage0_iter17();
    void thread_ap_block_state21_pp0_stage0_iter18();
    void thread_ap_block_state22_pp0_stage0_iter19();
    void thread_ap_block_state23_pp0_stage0_iter20();
    void thread_ap_block_state24_pp0_stage0_iter21();
    void thread_ap_block_state25_pp0_stage0_iter22();
    void thread_ap_block_state26_pp0_stage0_iter23();
    void thread_ap_block_state27_pp0_stage0_iter24();
    void thread_ap_block_state28_pp0_stage0_iter25();
    void thread_ap_block_state29_pp0_stage0_iter26();
    void thread_ap_block_state30_pp0_stage0_iter27();
    void thread_ap_block_state31_pp0_stage0_iter28();
    void thread_ap_block_state32_pp0_stage0_iter29();
    void thread_ap_block_state33_pp0_stage0_iter30();
    void thread_ap_block_state34_pp0_stage0_iter31();
    void thread_ap_block_state35_pp0_stage0_iter32();
    void thread_ap_block_state36_pp0_stage0_iter33();
    void thread_ap_block_state37_pp0_stage0_iter34();
    void thread_ap_block_state38_pp0_stage0_iter35();
    void thread_ap_block_state39_pp0_stage0_iter36();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state40_pp0_stage0_iter37();
    void thread_ap_block_state41_pp0_stage0_iter38();
    void thread_ap_block_state42_pp0_stage0_iter39();
    void thread_ap_block_state43_pp0_stage0_iter40();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_block_state9_pp0_stage0_iter6();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_bitcast_ln13_fu_148_p1();
    void thread_grp_fu_104_p0();
    void thread_grp_fu_107_p0();
    void thread_icmp_ln11_fu_131_p2();
    void thread_idx_fu_137_p2();
    void thread_res_Addr_A();
    void thread_res_Addr_A_orig();
    void thread_res_Clk_A();
    void thread_res_Din_A();
    void thread_res_EN_A();
    void thread_res_Rst_A();
    void thread_res_WEN_A();
    void thread_x_Addr_A();
    void thread_x_Addr_A_orig();
    void thread_x_Clk_A();
    void thread_x_Din_A();
    void thread_x_EN_A();
    void thread_x_Rst_A();
    void thread_x_WEN_A();
    void thread_xor_ln13_fu_151_p2();
    void thread_zext_ln13_fu_143_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
