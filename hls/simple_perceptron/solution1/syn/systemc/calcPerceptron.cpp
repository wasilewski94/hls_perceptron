// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "calcPerceptron.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic calcPerceptron::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic calcPerceptron::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> calcPerceptron::ap_ST_fsm_state1 = "1";
const sc_lv<3> calcPerceptron::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> calcPerceptron::ap_ST_fsm_state38 = "100";
const sc_lv<32> calcPerceptron::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool calcPerceptron::ap_const_boolean_1 = true;
const int calcPerceptron::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> calcPerceptron::ap_const_lv32_1 = "1";
const bool calcPerceptron::ap_const_boolean_0 = false;
const sc_lv<1> calcPerceptron::ap_const_lv1_0 = "0";
const sc_lv<1> calcPerceptron::ap_const_lv1_1 = "1";
const sc_lv<7> calcPerceptron::ap_const_lv7_0 = "0000000";
const sc_lv<32> calcPerceptron::ap_const_lv32_2 = "10";
const sc_lv<4> calcPerceptron::ap_const_lv4_0 = "0000";
const sc_lv<4> calcPerceptron::ap_const_lv4_F = "1111";
const sc_lv<32> calcPerceptron::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<7> calcPerceptron::ap_const_lv7_64 = "1100100";
const sc_lv<7> calcPerceptron::ap_const_lv7_1 = "1";
const sc_lv<32> calcPerceptron::ap_const_lv32_80000000 = "10000000000000000000000000000000";

calcPerceptron::calcPerceptron(sc_module_name name) : sc_module(name), mVcdFile(0) {
    calcPerceptron_CRTL_BUS_s_axi_U = new calcPerceptron_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>("calcPerceptron_CRTL_BUS_s_axi_U");
    calcPerceptron_CRTL_BUS_s_axi_U->AWVALID(s_axi_CRTL_BUS_AWVALID);
    calcPerceptron_CRTL_BUS_s_axi_U->AWREADY(s_axi_CRTL_BUS_AWREADY);
    calcPerceptron_CRTL_BUS_s_axi_U->AWADDR(s_axi_CRTL_BUS_AWADDR);
    calcPerceptron_CRTL_BUS_s_axi_U->WVALID(s_axi_CRTL_BUS_WVALID);
    calcPerceptron_CRTL_BUS_s_axi_U->WREADY(s_axi_CRTL_BUS_WREADY);
    calcPerceptron_CRTL_BUS_s_axi_U->WDATA(s_axi_CRTL_BUS_WDATA);
    calcPerceptron_CRTL_BUS_s_axi_U->WSTRB(s_axi_CRTL_BUS_WSTRB);
    calcPerceptron_CRTL_BUS_s_axi_U->ARVALID(s_axi_CRTL_BUS_ARVALID);
    calcPerceptron_CRTL_BUS_s_axi_U->ARREADY(s_axi_CRTL_BUS_ARREADY);
    calcPerceptron_CRTL_BUS_s_axi_U->ARADDR(s_axi_CRTL_BUS_ARADDR);
    calcPerceptron_CRTL_BUS_s_axi_U->RVALID(s_axi_CRTL_BUS_RVALID);
    calcPerceptron_CRTL_BUS_s_axi_U->RREADY(s_axi_CRTL_BUS_RREADY);
    calcPerceptron_CRTL_BUS_s_axi_U->RDATA(s_axi_CRTL_BUS_RDATA);
    calcPerceptron_CRTL_BUS_s_axi_U->RRESP(s_axi_CRTL_BUS_RRESP);
    calcPerceptron_CRTL_BUS_s_axi_U->BVALID(s_axi_CRTL_BUS_BVALID);
    calcPerceptron_CRTL_BUS_s_axi_U->BREADY(s_axi_CRTL_BUS_BREADY);
    calcPerceptron_CRTL_BUS_s_axi_U->BRESP(s_axi_CRTL_BUS_BRESP);
    calcPerceptron_CRTL_BUS_s_axi_U->ACLK(ap_clk);
    calcPerceptron_CRTL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    calcPerceptron_CRTL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    calcPerceptron_CRTL_BUS_s_axi_U->ap_start(ap_start);
    calcPerceptron_CRTL_BUS_s_axi_U->interrupt(interrupt);
    calcPerceptron_CRTL_BUS_s_axi_U->ap_ready(ap_ready);
    calcPerceptron_CRTL_BUS_s_axi_U->ap_done(ap_done);
    calcPerceptron_CRTL_BUS_s_axi_U->ap_idle(ap_idle);
    calcPerceptron_CRTL_BUS_s_axi_U->bias(bias);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1 = new calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1");
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1->clk(ap_clk);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1->reset(ap_rst_n_inv);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1->din0(tmp_1_reg_206);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1->din1(bias_read_reg_167);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1->ce(ap_var_for_const0);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1->dout(grp_fu_112_p2);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U2 = new calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U2");
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U2->clk(ap_clk);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U2->reset(ap_rst_n_inv);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U2->din0(tmp_i_i_reg_221);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U2->din1(ap_var_for_const1);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U2->ce(ap_var_for_const0);
    calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U2->dout(grp_fu_116_p2);
    calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U3 = new calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U3");
    calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U3->clk(ap_clk);
    calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U3->reset(ap_rst_n_inv);
    calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U3->din0(x_load_reg_196);
    calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U3->din1(w_load_reg_201);
    calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U3->ce(ap_var_for_const0);
    calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U3->dout(grp_fu_121_p2);
    calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4 = new calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1<1,10,32,32,32>("calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4");
    calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4->clk(ap_clk);
    calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4->reset(ap_rst_n_inv);
    calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4->din0(ap_var_for_const2);
    calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4->din1(tmp_5_reg_226);
    calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4->ce(ap_var_for_const0);
    calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4->dout(grp_fu_125_p2);
    calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5 = new calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1<1,9,32,32,32>("calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5");
    calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5->clk(ap_clk);
    calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5->reset(ap_rst_n_inv);
    calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5->din0(ap_var_for_const2);
    calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5->din1(grp_fu_130_p1);
    calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5->ce(ap_var_for_const0);
    calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5->dout(grp_fu_130_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter21);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter22);

    SC_METHOD(thread_ap_block_state25_pp0_stage0_iter23);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter24);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter25);

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter26);

    SC_METHOD(thread_ap_block_state29_pp0_stage0_iter27);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state30_pp0_stage0_iter28);

    SC_METHOD(thread_ap_block_state31_pp0_stage0_iter29);

    SC_METHOD(thread_ap_block_state32_pp0_stage0_iter30);

    SC_METHOD(thread_ap_block_state33_pp0_stage0_iter31);

    SC_METHOD(thread_ap_block_state34_pp0_stage0_iter32);

    SC_METHOD(thread_ap_block_state35_pp0_stage0_iter33);

    SC_METHOD(thread_ap_block_state36_pp0_stage0_iter34);

    SC_METHOD(thread_ap_block_state37_pp0_stage0_iter35);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln12_fu_135_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_enable_reg_pp0_iter24 );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_enable_reg_pp0_iter28 );
    sensitive << ( ap_enable_reg_pp0_iter29 );
    sensitive << ( ap_enable_reg_pp0_iter30 );
    sensitive << ( ap_enable_reg_pp0_iter31 );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( ap_enable_reg_pp0_iter33 );
    sensitive << ( ap_enable_reg_pp0_iter34 );
    sensitive << ( ap_enable_reg_pp0_iter35 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln14_fu_153_p1);
    sensitive << ( tmp_2_reg_211 );

    SC_METHOD(thread_grp_fu_130_p1);
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( xor_ln14_fu_156_p2 );

    SC_METHOD(thread_icmp_ln12_fu_135_p2);
    sensitive << ( idx_0_reg_101 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_idx_fu_141_p2);
    sensitive << ( idx_0_reg_101 );

    SC_METHOD(thread_res_Addr_A);
    sensitive << ( res_Addr_A_orig );

    SC_METHOD(thread_res_Addr_A_orig);
    sensitive << ( zext_ln14_reg_181_pp0_iter34_reg );
    sensitive << ( ap_enable_reg_pp0_iter35 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_res_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_res_Din_A);
    sensitive << ( tmp_reg_231 );
    sensitive << ( ap_enable_reg_pp0_iter35 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_res_EN_A);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter35 );

    SC_METHOD(thread_res_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_res_WEN_A);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln12_reg_172_pp0_iter34_reg );
    sensitive << ( ap_enable_reg_pp0_iter35 );

    SC_METHOD(thread_w_Addr_A);
    sensitive << ( w_Addr_A_orig );

    SC_METHOD(thread_w_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln14_fu_147_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_w_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_w_Din_A);

    SC_METHOD(thread_w_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_w_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_w_WEN_A);

    SC_METHOD(thread_x_Addr_A);
    sensitive << ( x_Addr_A_orig );

    SC_METHOD(thread_x_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln14_fu_147_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_x_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_x_Din_A);

    SC_METHOD(thread_x_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_x_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_x_WEN_A);

    SC_METHOD(thread_xor_ln14_fu_156_p2);
    sensitive << ( bitcast_ln14_fu_153_p1 );

    SC_METHOD(thread_zext_ln14_fu_147_p1);
    sensitive << ( idx_0_reg_101 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln12_fu_135_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter34 );
    sensitive << ( ap_enable_reg_pp0_iter35 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter22 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter23 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter24 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter25 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter26 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter27 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter28 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter29 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter30 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter31 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter32 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter33 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter34 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter35 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "calcPerceptron_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, x_Addr_A, "(port)x_Addr_A");
    sc_trace(mVcdFile, x_EN_A, "(port)x_EN_A");
    sc_trace(mVcdFile, x_WEN_A, "(port)x_WEN_A");
    sc_trace(mVcdFile, x_Din_A, "(port)x_Din_A");
    sc_trace(mVcdFile, x_Dout_A, "(port)x_Dout_A");
    sc_trace(mVcdFile, x_Clk_A, "(port)x_Clk_A");
    sc_trace(mVcdFile, x_Rst_A, "(port)x_Rst_A");
    sc_trace(mVcdFile, w_Addr_A, "(port)w_Addr_A");
    sc_trace(mVcdFile, w_EN_A, "(port)w_EN_A");
    sc_trace(mVcdFile, w_WEN_A, "(port)w_WEN_A");
    sc_trace(mVcdFile, w_Din_A, "(port)w_Din_A");
    sc_trace(mVcdFile, w_Dout_A, "(port)w_Dout_A");
    sc_trace(mVcdFile, w_Clk_A, "(port)w_Clk_A");
    sc_trace(mVcdFile, w_Rst_A, "(port)w_Rst_A");
    sc_trace(mVcdFile, res_Addr_A, "(port)res_Addr_A");
    sc_trace(mVcdFile, res_EN_A, "(port)res_EN_A");
    sc_trace(mVcdFile, res_WEN_A, "(port)res_WEN_A");
    sc_trace(mVcdFile, res_Din_A, "(port)res_Din_A");
    sc_trace(mVcdFile, res_Dout_A, "(port)res_Dout_A");
    sc_trace(mVcdFile, res_Clk_A, "(port)res_Clk_A");
    sc_trace(mVcdFile, res_Rst_A, "(port)res_Rst_A");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWVALID, "(port)s_axi_CRTL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWREADY, "(port)s_axi_CRTL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWADDR, "(port)s_axi_CRTL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WVALID, "(port)s_axi_CRTL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WREADY, "(port)s_axi_CRTL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WDATA, "(port)s_axi_CRTL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WSTRB, "(port)s_axi_CRTL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARVALID, "(port)s_axi_CRTL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARREADY, "(port)s_axi_CRTL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARADDR, "(port)s_axi_CRTL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RVALID, "(port)s_axi_CRTL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RREADY, "(port)s_axi_CRTL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RDATA, "(port)s_axi_CRTL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RRESP, "(port)s_axi_CRTL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BVALID, "(port)s_axi_CRTL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BREADY, "(port)s_axi_CRTL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BRESP, "(port)s_axi_CRTL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, bias, "bias");
    sc_trace(mVcdFile, idx_0_reg_101, "idx_0_reg_101");
    sc_trace(mVcdFile, bias_read_reg_167, "bias_read_reg_167");
    sc_trace(mVcdFile, icmp_ln12_fu_135_p2, "icmp_ln12_fu_135_p2");
    sc_trace(mVcdFile, icmp_ln12_reg_172, "icmp_ln12_reg_172");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter19, "ap_block_state21_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter20, "ap_block_state22_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter21, "ap_block_state23_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter22, "ap_block_state24_pp0_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage0_iter23, "ap_block_state25_pp0_stage0_iter23");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter24, "ap_block_state26_pp0_stage0_iter24");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter25, "ap_block_state27_pp0_stage0_iter25");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter26, "ap_block_state28_pp0_stage0_iter26");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage0_iter27, "ap_block_state29_pp0_stage0_iter27");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage0_iter28, "ap_block_state30_pp0_stage0_iter28");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage0_iter29, "ap_block_state31_pp0_stage0_iter29");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage0_iter30, "ap_block_state32_pp0_stage0_iter30");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage0_iter31, "ap_block_state33_pp0_stage0_iter31");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage0_iter32, "ap_block_state34_pp0_stage0_iter32");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage0_iter33, "ap_block_state35_pp0_stage0_iter33");
    sc_trace(mVcdFile, ap_block_state36_pp0_stage0_iter34, "ap_block_state36_pp0_stage0_iter34");
    sc_trace(mVcdFile, ap_block_state37_pp0_stage0_iter35, "ap_block_state37_pp0_stage0_iter35");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter1_reg, "icmp_ln12_reg_172_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter2_reg, "icmp_ln12_reg_172_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter3_reg, "icmp_ln12_reg_172_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter4_reg, "icmp_ln12_reg_172_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter5_reg, "icmp_ln12_reg_172_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter6_reg, "icmp_ln12_reg_172_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter7_reg, "icmp_ln12_reg_172_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter8_reg, "icmp_ln12_reg_172_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter9_reg, "icmp_ln12_reg_172_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter10_reg, "icmp_ln12_reg_172_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter11_reg, "icmp_ln12_reg_172_pp0_iter11_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter12_reg, "icmp_ln12_reg_172_pp0_iter12_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter13_reg, "icmp_ln12_reg_172_pp0_iter13_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter14_reg, "icmp_ln12_reg_172_pp0_iter14_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter15_reg, "icmp_ln12_reg_172_pp0_iter15_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter16_reg, "icmp_ln12_reg_172_pp0_iter16_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter17_reg, "icmp_ln12_reg_172_pp0_iter17_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter18_reg, "icmp_ln12_reg_172_pp0_iter18_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter19_reg, "icmp_ln12_reg_172_pp0_iter19_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter20_reg, "icmp_ln12_reg_172_pp0_iter20_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter21_reg, "icmp_ln12_reg_172_pp0_iter21_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter22_reg, "icmp_ln12_reg_172_pp0_iter22_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter23_reg, "icmp_ln12_reg_172_pp0_iter23_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter24_reg, "icmp_ln12_reg_172_pp0_iter24_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter25_reg, "icmp_ln12_reg_172_pp0_iter25_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter26_reg, "icmp_ln12_reg_172_pp0_iter26_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter27_reg, "icmp_ln12_reg_172_pp0_iter27_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter28_reg, "icmp_ln12_reg_172_pp0_iter28_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter29_reg, "icmp_ln12_reg_172_pp0_iter29_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter30_reg, "icmp_ln12_reg_172_pp0_iter30_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter31_reg, "icmp_ln12_reg_172_pp0_iter31_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter32_reg, "icmp_ln12_reg_172_pp0_iter32_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter33_reg, "icmp_ln12_reg_172_pp0_iter33_reg");
    sc_trace(mVcdFile, icmp_ln12_reg_172_pp0_iter34_reg, "icmp_ln12_reg_172_pp0_iter34_reg");
    sc_trace(mVcdFile, idx_fu_141_p2, "idx_fu_141_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln14_fu_147_p1, "zext_ln14_fu_147_p1");
    sc_trace(mVcdFile, zext_ln14_reg_181, "zext_ln14_reg_181");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter1_reg, "zext_ln14_reg_181_pp0_iter1_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter2_reg, "zext_ln14_reg_181_pp0_iter2_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter3_reg, "zext_ln14_reg_181_pp0_iter3_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter4_reg, "zext_ln14_reg_181_pp0_iter4_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter5_reg, "zext_ln14_reg_181_pp0_iter5_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter6_reg, "zext_ln14_reg_181_pp0_iter6_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter7_reg, "zext_ln14_reg_181_pp0_iter7_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter8_reg, "zext_ln14_reg_181_pp0_iter8_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter9_reg, "zext_ln14_reg_181_pp0_iter9_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter10_reg, "zext_ln14_reg_181_pp0_iter10_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter11_reg, "zext_ln14_reg_181_pp0_iter11_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter12_reg, "zext_ln14_reg_181_pp0_iter12_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter13_reg, "zext_ln14_reg_181_pp0_iter13_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter14_reg, "zext_ln14_reg_181_pp0_iter14_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter15_reg, "zext_ln14_reg_181_pp0_iter15_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter16_reg, "zext_ln14_reg_181_pp0_iter16_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter17_reg, "zext_ln14_reg_181_pp0_iter17_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter18_reg, "zext_ln14_reg_181_pp0_iter18_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter19_reg, "zext_ln14_reg_181_pp0_iter19_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter20_reg, "zext_ln14_reg_181_pp0_iter20_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter21_reg, "zext_ln14_reg_181_pp0_iter21_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter22_reg, "zext_ln14_reg_181_pp0_iter22_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter23_reg, "zext_ln14_reg_181_pp0_iter23_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter24_reg, "zext_ln14_reg_181_pp0_iter24_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter25_reg, "zext_ln14_reg_181_pp0_iter25_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter26_reg, "zext_ln14_reg_181_pp0_iter26_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter27_reg, "zext_ln14_reg_181_pp0_iter27_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter28_reg, "zext_ln14_reg_181_pp0_iter28_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter29_reg, "zext_ln14_reg_181_pp0_iter29_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter30_reg, "zext_ln14_reg_181_pp0_iter30_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter31_reg, "zext_ln14_reg_181_pp0_iter31_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter32_reg, "zext_ln14_reg_181_pp0_iter32_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter33_reg, "zext_ln14_reg_181_pp0_iter33_reg");
    sc_trace(mVcdFile, zext_ln14_reg_181_pp0_iter34_reg, "zext_ln14_reg_181_pp0_iter34_reg");
    sc_trace(mVcdFile, x_load_reg_196, "x_load_reg_196");
    sc_trace(mVcdFile, w_load_reg_201, "w_load_reg_201");
    sc_trace(mVcdFile, grp_fu_121_p2, "grp_fu_121_p2");
    sc_trace(mVcdFile, tmp_1_reg_206, "tmp_1_reg_206");
    sc_trace(mVcdFile, grp_fu_112_p2, "grp_fu_112_p2");
    sc_trace(mVcdFile, tmp_2_reg_211, "tmp_2_reg_211");
    sc_trace(mVcdFile, grp_fu_130_p2, "grp_fu_130_p2");
    sc_trace(mVcdFile, tmp_i_i_reg_221, "tmp_i_i_reg_221");
    sc_trace(mVcdFile, grp_fu_116_p2, "grp_fu_116_p2");
    sc_trace(mVcdFile, tmp_5_reg_226, "tmp_5_reg_226");
    sc_trace(mVcdFile, grp_fu_125_p2, "grp_fu_125_p2");
    sc_trace(mVcdFile, tmp_reg_231, "tmp_reg_231");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter22, "ap_enable_reg_pp0_iter22");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter23, "ap_enable_reg_pp0_iter23");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter24, "ap_enable_reg_pp0_iter24");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter25, "ap_enable_reg_pp0_iter25");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter26, "ap_enable_reg_pp0_iter26");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter27, "ap_enable_reg_pp0_iter27");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter28, "ap_enable_reg_pp0_iter28");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter29, "ap_enable_reg_pp0_iter29");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter30, "ap_enable_reg_pp0_iter30");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter31, "ap_enable_reg_pp0_iter31");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter32, "ap_enable_reg_pp0_iter32");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter33, "ap_enable_reg_pp0_iter33");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter34, "ap_enable_reg_pp0_iter34");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter35, "ap_enable_reg_pp0_iter35");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, x_Addr_A_orig, "x_Addr_A_orig");
    sc_trace(mVcdFile, w_Addr_A_orig, "w_Addr_A_orig");
    sc_trace(mVcdFile, res_Addr_A_orig, "res_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_130_p1, "grp_fu_130_p1");
    sc_trace(mVcdFile, bitcast_ln14_fu_153_p1, "bitcast_ln14_fu_153_p1");
    sc_trace(mVcdFile, xor_ln14_fu_156_p2, "xor_ln14_fu_156_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("calcPerceptron.hdltvin.dat");
    mHdltvoutHandle.open("calcPerceptron.hdltvout.dat");
}

calcPerceptron::~calcPerceptron() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete calcPerceptron_CRTL_BUS_s_axi_U;
    delete calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U1;
    delete calcPerceptron_fadd_32ns_32ns_32_5_full_dsp_1_U2;
    delete calcPerceptron_fmul_32ns_32ns_32_4_max_dsp_1_U3;
    delete calcPerceptron_frecip_32ns_32ns_32_10_full_dsp_1_U4;
    delete calcPerceptron_fexp_32ns_32ns_32_9_full_dsp_1_U5;
}

void calcPerceptron::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void calcPerceptron::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void calcPerceptron::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void calcPerceptron::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter22 = ap_enable_reg_pp0_iter21.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter23 = ap_enable_reg_pp0_iter22.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter24 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter24 = ap_enable_reg_pp0_iter23.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter25 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter25 = ap_enable_reg_pp0_iter24.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter26 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter26 = ap_enable_reg_pp0_iter25.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter27 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter27 = ap_enable_reg_pp0_iter26.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter28 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter28 = ap_enable_reg_pp0_iter27.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter29 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter29 = ap_enable_reg_pp0_iter28.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter30 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter30 = ap_enable_reg_pp0_iter29.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter31 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter31 = ap_enable_reg_pp0_iter30.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter32 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter32 = ap_enable_reg_pp0_iter31.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter33 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter33 = ap_enable_reg_pp0_iter32.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter34 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter34 = ap_enable_reg_pp0_iter33.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter35 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter35 = ap_enable_reg_pp0_iter34.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter35 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln12_fu_135_p2.read(), ap_const_lv1_0))) {
        idx_0_reg_101 = idx_fu_141_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        idx_0_reg_101 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bias_read_reg_167 = bias.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln12_reg_172 = icmp_ln12_fu_135_p2.read();
        icmp_ln12_reg_172_pp0_iter1_reg = icmp_ln12_reg_172.read();
        zext_ln14_reg_181_pp0_iter1_reg = zext_ln14_reg_181.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln12_reg_172_pp0_iter10_reg = icmp_ln12_reg_172_pp0_iter9_reg.read();
        icmp_ln12_reg_172_pp0_iter11_reg = icmp_ln12_reg_172_pp0_iter10_reg.read();
        icmp_ln12_reg_172_pp0_iter12_reg = icmp_ln12_reg_172_pp0_iter11_reg.read();
        icmp_ln12_reg_172_pp0_iter13_reg = icmp_ln12_reg_172_pp0_iter12_reg.read();
        icmp_ln12_reg_172_pp0_iter14_reg = icmp_ln12_reg_172_pp0_iter13_reg.read();
        icmp_ln12_reg_172_pp0_iter15_reg = icmp_ln12_reg_172_pp0_iter14_reg.read();
        icmp_ln12_reg_172_pp0_iter16_reg = icmp_ln12_reg_172_pp0_iter15_reg.read();
        icmp_ln12_reg_172_pp0_iter17_reg = icmp_ln12_reg_172_pp0_iter16_reg.read();
        icmp_ln12_reg_172_pp0_iter18_reg = icmp_ln12_reg_172_pp0_iter17_reg.read();
        icmp_ln12_reg_172_pp0_iter19_reg = icmp_ln12_reg_172_pp0_iter18_reg.read();
        icmp_ln12_reg_172_pp0_iter20_reg = icmp_ln12_reg_172_pp0_iter19_reg.read();
        icmp_ln12_reg_172_pp0_iter21_reg = icmp_ln12_reg_172_pp0_iter20_reg.read();
        icmp_ln12_reg_172_pp0_iter22_reg = icmp_ln12_reg_172_pp0_iter21_reg.read();
        icmp_ln12_reg_172_pp0_iter23_reg = icmp_ln12_reg_172_pp0_iter22_reg.read();
        icmp_ln12_reg_172_pp0_iter24_reg = icmp_ln12_reg_172_pp0_iter23_reg.read();
        icmp_ln12_reg_172_pp0_iter25_reg = icmp_ln12_reg_172_pp0_iter24_reg.read();
        icmp_ln12_reg_172_pp0_iter26_reg = icmp_ln12_reg_172_pp0_iter25_reg.read();
        icmp_ln12_reg_172_pp0_iter27_reg = icmp_ln12_reg_172_pp0_iter26_reg.read();
        icmp_ln12_reg_172_pp0_iter28_reg = icmp_ln12_reg_172_pp0_iter27_reg.read();
        icmp_ln12_reg_172_pp0_iter29_reg = icmp_ln12_reg_172_pp0_iter28_reg.read();
        icmp_ln12_reg_172_pp0_iter2_reg = icmp_ln12_reg_172_pp0_iter1_reg.read();
        icmp_ln12_reg_172_pp0_iter30_reg = icmp_ln12_reg_172_pp0_iter29_reg.read();
        icmp_ln12_reg_172_pp0_iter31_reg = icmp_ln12_reg_172_pp0_iter30_reg.read();
        icmp_ln12_reg_172_pp0_iter32_reg = icmp_ln12_reg_172_pp0_iter31_reg.read();
        icmp_ln12_reg_172_pp0_iter33_reg = icmp_ln12_reg_172_pp0_iter32_reg.read();
        icmp_ln12_reg_172_pp0_iter34_reg = icmp_ln12_reg_172_pp0_iter33_reg.read();
        icmp_ln12_reg_172_pp0_iter3_reg = icmp_ln12_reg_172_pp0_iter2_reg.read();
        icmp_ln12_reg_172_pp0_iter4_reg = icmp_ln12_reg_172_pp0_iter3_reg.read();
        icmp_ln12_reg_172_pp0_iter5_reg = icmp_ln12_reg_172_pp0_iter4_reg.read();
        icmp_ln12_reg_172_pp0_iter6_reg = icmp_ln12_reg_172_pp0_iter5_reg.read();
        icmp_ln12_reg_172_pp0_iter7_reg = icmp_ln12_reg_172_pp0_iter6_reg.read();
        icmp_ln12_reg_172_pp0_iter8_reg = icmp_ln12_reg_172_pp0_iter7_reg.read();
        icmp_ln12_reg_172_pp0_iter9_reg = icmp_ln12_reg_172_pp0_iter8_reg.read();
        zext_ln14_reg_181_pp0_iter10_reg = zext_ln14_reg_181_pp0_iter9_reg.read();
        zext_ln14_reg_181_pp0_iter11_reg = zext_ln14_reg_181_pp0_iter10_reg.read();
        zext_ln14_reg_181_pp0_iter12_reg = zext_ln14_reg_181_pp0_iter11_reg.read();
        zext_ln14_reg_181_pp0_iter13_reg = zext_ln14_reg_181_pp0_iter12_reg.read();
        zext_ln14_reg_181_pp0_iter14_reg = zext_ln14_reg_181_pp0_iter13_reg.read();
        zext_ln14_reg_181_pp0_iter15_reg = zext_ln14_reg_181_pp0_iter14_reg.read();
        zext_ln14_reg_181_pp0_iter16_reg = zext_ln14_reg_181_pp0_iter15_reg.read();
        zext_ln14_reg_181_pp0_iter17_reg = zext_ln14_reg_181_pp0_iter16_reg.read();
        zext_ln14_reg_181_pp0_iter18_reg = zext_ln14_reg_181_pp0_iter17_reg.read();
        zext_ln14_reg_181_pp0_iter19_reg = zext_ln14_reg_181_pp0_iter18_reg.read();
        zext_ln14_reg_181_pp0_iter20_reg = zext_ln14_reg_181_pp0_iter19_reg.read();
        zext_ln14_reg_181_pp0_iter21_reg = zext_ln14_reg_181_pp0_iter20_reg.read();
        zext_ln14_reg_181_pp0_iter22_reg = zext_ln14_reg_181_pp0_iter21_reg.read();
        zext_ln14_reg_181_pp0_iter23_reg = zext_ln14_reg_181_pp0_iter22_reg.read();
        zext_ln14_reg_181_pp0_iter24_reg = zext_ln14_reg_181_pp0_iter23_reg.read();
        zext_ln14_reg_181_pp0_iter25_reg = zext_ln14_reg_181_pp0_iter24_reg.read();
        zext_ln14_reg_181_pp0_iter26_reg = zext_ln14_reg_181_pp0_iter25_reg.read();
        zext_ln14_reg_181_pp0_iter27_reg = zext_ln14_reg_181_pp0_iter26_reg.read();
        zext_ln14_reg_181_pp0_iter28_reg = zext_ln14_reg_181_pp0_iter27_reg.read();
        zext_ln14_reg_181_pp0_iter29_reg = zext_ln14_reg_181_pp0_iter28_reg.read();
        zext_ln14_reg_181_pp0_iter2_reg = zext_ln14_reg_181_pp0_iter1_reg.read();
        zext_ln14_reg_181_pp0_iter30_reg = zext_ln14_reg_181_pp0_iter29_reg.read();
        zext_ln14_reg_181_pp0_iter31_reg = zext_ln14_reg_181_pp0_iter30_reg.read();
        zext_ln14_reg_181_pp0_iter32_reg = zext_ln14_reg_181_pp0_iter31_reg.read();
        zext_ln14_reg_181_pp0_iter33_reg = zext_ln14_reg_181_pp0_iter32_reg.read();
        zext_ln14_reg_181_pp0_iter34_reg = zext_ln14_reg_181_pp0_iter33_reg.read();
        zext_ln14_reg_181_pp0_iter3_reg = zext_ln14_reg_181_pp0_iter2_reg.read();
        zext_ln14_reg_181_pp0_iter4_reg = zext_ln14_reg_181_pp0_iter3_reg.read();
        zext_ln14_reg_181_pp0_iter5_reg = zext_ln14_reg_181_pp0_iter4_reg.read();
        zext_ln14_reg_181_pp0_iter6_reg = zext_ln14_reg_181_pp0_iter5_reg.read();
        zext_ln14_reg_181_pp0_iter7_reg = zext_ln14_reg_181_pp0_iter6_reg.read();
        zext_ln14_reg_181_pp0_iter8_reg = zext_ln14_reg_181_pp0_iter7_reg.read();
        zext_ln14_reg_181_pp0_iter9_reg = zext_ln14_reg_181_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_reg_172_pp0_iter4_reg.read(), ap_const_lv1_0))) {
        tmp_1_reg_206 = grp_fu_121_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_reg_172_pp0_iter9_reg.read(), ap_const_lv1_0))) {
        tmp_2_reg_211 = grp_fu_112_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_reg_172_pp0_iter23_reg.read(), ap_const_lv1_0))) {
        tmp_5_reg_226 = grp_fu_116_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_reg_172_pp0_iter18_reg.read(), ap_const_lv1_0))) {
        tmp_i_i_reg_221 = grp_fu_130_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_reg_172_pp0_iter33_reg.read(), ap_const_lv1_0))) {
        tmp_reg_231 = grp_fu_125_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_reg_172.read(), ap_const_lv1_0))) {
        w_load_reg_201 = w_Dout_A.read();
        x_load_reg_196 = x_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_fu_135_p2.read(), ap_const_lv1_0))) {
        zext_ln14_reg_181 = zext_ln14_fu_147_p1.read();
    }
}

void calcPerceptron::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void calcPerceptron::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void calcPerceptron::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[2];
}

void calcPerceptron::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state21_pp0_stage0_iter19() {
    ap_block_state21_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state22_pp0_stage0_iter20() {
    ap_block_state22_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state23_pp0_stage0_iter21() {
    ap_block_state23_pp0_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state24_pp0_stage0_iter22() {
    ap_block_state24_pp0_stage0_iter22 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state25_pp0_stage0_iter23() {
    ap_block_state25_pp0_stage0_iter23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state26_pp0_stage0_iter24() {
    ap_block_state26_pp0_stage0_iter24 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state27_pp0_stage0_iter25() {
    ap_block_state27_pp0_stage0_iter25 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state28_pp0_stage0_iter26() {
    ap_block_state28_pp0_stage0_iter26 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state29_pp0_stage0_iter27() {
    ap_block_state29_pp0_stage0_iter27 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state30_pp0_stage0_iter28() {
    ap_block_state30_pp0_stage0_iter28 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state31_pp0_stage0_iter29() {
    ap_block_state31_pp0_stage0_iter29 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state32_pp0_stage0_iter30() {
    ap_block_state32_pp0_stage0_iter30 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state33_pp0_stage0_iter31() {
    ap_block_state33_pp0_stage0_iter31 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state34_pp0_stage0_iter32() {
    ap_block_state34_pp0_stage0_iter32 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state35_pp0_stage0_iter33() {
    ap_block_state35_pp0_stage0_iter33 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state36_pp0_stage0_iter34() {
    ap_block_state36_pp0_stage0_iter34 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state37_pp0_stage0_iter35() {
    ap_block_state37_pp0_stage0_iter35 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void calcPerceptron::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln12_fu_135_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void calcPerceptron::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void calcPerceptron::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void calcPerceptron::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void calcPerceptron::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter27.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter28.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter29.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter31.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter32.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter33.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter34.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter35.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void calcPerceptron::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void calcPerceptron::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void calcPerceptron::thread_bitcast_ln14_fu_153_p1() {
    bitcast_ln14_fu_153_p1 = tmp_2_reg_211.read();
}

void calcPerceptron::thread_grp_fu_130_p1() {
    grp_fu_130_p1 = xor_ln14_fu_156_p2.read();
}

void calcPerceptron::thread_icmp_ln12_fu_135_p2() {
    icmp_ln12_fu_135_p2 = (!idx_0_reg_101.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(idx_0_reg_101.read() == ap_const_lv7_64);
}

void calcPerceptron::thread_idx_fu_141_p2() {
    idx_fu_141_p2 = (!idx_0_reg_101.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(idx_0_reg_101.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void calcPerceptron::thread_res_Addr_A() {
    res_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): res_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void calcPerceptron::thread_res_Addr_A_orig() {
    res_Addr_A_orig =  (sc_lv<32>) (zext_ln14_reg_181_pp0_iter34_reg.read());
}

void calcPerceptron::thread_res_Clk_A() {
    res_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void calcPerceptron::thread_res_Din_A() {
    res_Din_A = tmp_reg_231.read();
}

void calcPerceptron::thread_res_EN_A() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter35.read()))) {
        res_EN_A = ap_const_logic_1;
    } else {
        res_EN_A = ap_const_logic_0;
    }
}

void calcPerceptron::thread_res_Rst_A() {
    res_Rst_A = ap_rst_n_inv.read();
}

void calcPerceptron::thread_res_WEN_A() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter35.read()) && 
         esl_seteq<1,1,1>(icmp_ln12_reg_172_pp0_iter34_reg.read(), ap_const_lv1_0))) {
        res_WEN_A = ap_const_lv4_F;
    } else {
        res_WEN_A = ap_const_lv4_0;
    }
}

void calcPerceptron::thread_w_Addr_A() {
    w_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): w_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void calcPerceptron::thread_w_Addr_A_orig() {
    w_Addr_A_orig =  (sc_lv<32>) (zext_ln14_fu_147_p1.read());
}

void calcPerceptron::thread_w_Clk_A() {
    w_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void calcPerceptron::thread_w_Din_A() {
    w_Din_A = ap_const_lv32_0;
}

void calcPerceptron::thread_w_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        w_EN_A = ap_const_logic_1;
    } else {
        w_EN_A = ap_const_logic_0;
    }
}

void calcPerceptron::thread_w_Rst_A() {
    w_Rst_A = ap_rst_n_inv.read();
}

void calcPerceptron::thread_w_WEN_A() {
    w_WEN_A = ap_const_lv4_0;
}

void calcPerceptron::thread_x_Addr_A() {
    x_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): x_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void calcPerceptron::thread_x_Addr_A_orig() {
    x_Addr_A_orig =  (sc_lv<32>) (zext_ln14_fu_147_p1.read());
}

void calcPerceptron::thread_x_Clk_A() {
    x_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void calcPerceptron::thread_x_Din_A() {
    x_Din_A = ap_const_lv32_0;
}

void calcPerceptron::thread_x_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        x_EN_A = ap_const_logic_1;
    } else {
        x_EN_A = ap_const_logic_0;
    }
}

void calcPerceptron::thread_x_Rst_A() {
    x_Rst_A = ap_rst_n_inv.read();
}

void calcPerceptron::thread_x_WEN_A() {
    x_WEN_A = ap_const_lv4_0;
}

void calcPerceptron::thread_xor_ln14_fu_156_p2() {
    xor_ln14_fu_156_p2 = (bitcast_ln14_fu_153_p1.read() ^ ap_const_lv32_80000000);
}

void calcPerceptron::thread_zext_ln14_fu_147_p1() {
    zext_ln14_fu_147_p1 = esl_zext<64,7>(idx_0_reg_101.read());
}

void calcPerceptron::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter35.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter34.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln12_fu_135_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter35.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter34.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln12_fu_135_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void calcPerceptron::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"x_Addr_A\" :  \"" << x_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_EN_A\" :  \"" << x_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_WEN_A\" :  \"" << x_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_Din_A\" :  \"" << x_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_Dout_A\" :  \"" << x_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_Clk_A\" :  \"" << x_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_Rst_A\" :  \"" << x_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"w_Addr_A\" :  \"" << w_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"w_EN_A\" :  \"" << w_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"w_WEN_A\" :  \"" << w_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"w_Din_A\" :  \"" << w_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"w_Dout_A\" :  \"" << w_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"w_Clk_A\" :  \"" << w_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"w_Rst_A\" :  \"" << w_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_Addr_A\" :  \"" << res_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_EN_A\" :  \"" << res_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_WEN_A\" :  \"" << res_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_Din_A\" :  \"" << res_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"res_Dout_A\" :  \"" << res_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_Clk_A\" :  \"" << res_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_Rst_A\" :  \"" << res_Rst_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWVALID\" :  \"" << s_axi_CRTL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_AWREADY\" :  \"" << s_axi_CRTL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWADDR\" :  \"" << s_axi_CRTL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WVALID\" :  \"" << s_axi_CRTL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_WREADY\" :  \"" << s_axi_CRTL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WDATA\" :  \"" << s_axi_CRTL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WSTRB\" :  \"" << s_axi_CRTL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARVALID\" :  \"" << s_axi_CRTL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_ARREADY\" :  \"" << s_axi_CRTL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARADDR\" :  \"" << s_axi_CRTL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RVALID\" :  \"" << s_axi_CRTL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_RREADY\" :  \"" << s_axi_CRTL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RDATA\" :  \"" << s_axi_CRTL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RRESP\" :  \"" << s_axi_CRTL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BVALID\" :  \"" << s_axi_CRTL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_BREADY\" :  \"" << s_axi_CRTL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BRESP\" :  \"" << s_axi_CRTL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

